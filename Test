import React, { useState, useRef, useEffect } from 'react';
import { Select, Option, Card } from '@citi-icg-172888/icgds-react';

export default function CustomizeFilter() {
  // State to store selected values for each filter
  const [filters, setFilters] = useState({
    sprint: '',
    domain: '',
    tpm: '',
    issueType: '',
    capability: '',
    productOwner: '',
  });

  // Ref for the card header
  const cardHeaderRef = useRef();

  // Handle change for each filter
  const onChange = (filterName, value) => {
    setFilters((prev) => ({
      ...prev,
      [filterName]: value,
    }));
    console.log(`Selected ${filterName}: ${value}`);
  };

  // Sample data for dropdowns (you can replace these with actual data)
  const sprintOptions = [
    { title: 'Sprint 1', label: 'Sprint 1', value: 'sprint1' },
    { title: 'Sprint 2', label: 'Sprint 2', value: 'sprint2' },
    { title: 'Sprint 3', label: 'Sprint 3', value: 'sprint3' },
  ];

  const domainOptions = [
    { title: 'Domain A', label: 'Domain A', value: 'domainA' },
    { title: 'Domain B', label: 'Domain B', value: 'domainB' },
    { title: 'Domain C', label: 'Domain C', value: 'domainC' },
  ];

  const tpmOptions = [
    { title: 'TPM 1', label: 'TPM 1', value: 'tpm1' },
    { title: 'TPM 2', label: 'TPM 2', value: 'tpm2' },
    { title: 'TPM 3', label: 'TPM 3', value: 'tpm3' },
  ];

  const issueTypeOptions = [
    { title: 'Bug', label: 'Bug', value: 'bug' },
    { title: 'Feature', label: 'Feature', value: 'feature' },
    { title: 'Task', label: 'Task', value: 'task' },
  ];

  const capabilityOptions = [
    { title: 'Capability 1', label: 'Capability 1', value: 'capability1' },
    { title: 'Capability 2', label: 'Capability 2', value: 'capability2' },
    { title: 'Capability 3', label: 'Capability 3', value: 'capability3' },
  ];

  const productOwnerOptions = [
    { title: 'Owner 1', label: 'Owner 1', value: 'owner1' },
    { title: 'Owner 2', label: 'Owner 2', value: 'owner2' },
    { title: 'Owner 3', label: 'Owner 3', value: 'owner3' },
  ];

  // Common filter function for search
  const customizeFilter = (input, option) =>
    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;

  return (
    <Card
      hover
      ref={cardHeaderRef}
      className="lmn-shadow-lg lmn-p-3 lmn-mb-5 lmn-bg-white lmn-border lmn-border-strong lmn-col-12 lmn-mt-4px"
    >
      <h3 style={{ fontWeight: 'bold', marginBottom: '20px' }}>Extended Filters</h3>

      {/* Sprint Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          Sprint
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select a sprint"
          onChange={(value) => onChange('sprint', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {sprintOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>

      {/* Domain Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          Domain
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select a domain"
          onChange={(value) => onChange('domain', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {domainOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>

      {/* TPM Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          TPM
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select a TPM"
          onChange={(value) => onChange('tpm', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {tpmOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>

      {/* Issue Type Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          Issue Type
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select an issue type"
          onChange={(value) => onChange('issueType', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {issueTypeOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>

      {/* Capability Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          Capability
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select a capability"
          onChange={(value) => onChange('capability', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {capabilityOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>

      {/* Product Owner Filter */}
      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontSize: '14px', color: '#666' }}>
          Product Owner
        </label>
        <Select
          showSearch
          highlightOption
          style={{ width: '100%' }}
          placeholder="Select a product owner"
          onChange={(value) => onChange('productOwner', value)}
          optionLabelProp="label"
          customizeFilter={customizeFilter}
          getPopupContainer={() => document.querySelector('#app-content')}
        >
          {productOwnerOptions.map((option) => (
            <Option
              key={option.value}
              title={option.title}
              label={option.label}
              value={option.value}
            >
              {option.label}
            </Option>
          ))}
        </Select>
      </div>
    </Card>
  );
}
