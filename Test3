import React, { useState, useEffect } from 'react';
import HighchartsReact from 'highcharts-react-official';
import Highcharts from 'highcharts';
import { merge } from 'lodash';

export default function SentimentBarChart({ isStyleMode, themeConfig }) {
    const [chartOptions, setChartOptions] = useState({});
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    const modeConfig = {
        chart: {
            styledMode: isStyleMode,
        },
    };

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await fetch('/api/sentiment');
                if (!response.ok) throw new Error('Failed to fetch data');
                const data = await response.json();

                // Categorize sentiment
                const categories = {
                    negative: 0,
                    neutral: 0,
                    positive: 0
                };

                data.forEach(item => {
                    const score = item.combineScore || 0;
                    if (score > 0) categories.positive++;
                    else if (score < 0) categories.negative++;
                    else categories.neutral++;
                });

                // Determine overall sentiment
                const maxCategory = Object.entries(categories).reduce(
                    (max, [key, value]) => value > max[1] ? [key, value] : max,
                    ['neutral', -Infinity]
                )[0];

                const options = {
                    chart: {
                        type: 'bar',
                        backgroundColor: '#f8f9fa',
                        height: 300,
                        inverted: true // Make horizontal
                    },
                    title: {
                        text: 'TEAM SENTIMENT ANALYSIS',
                        align: 'left',
                        style: {
                            fontSize: '16px',
                            fontWeight: 'bold'
                        }
                    },
                    subtitle: {
                        text: `${{
                            negative: 'üò† Overwhelmingly Negative',
                            neutral: 'üòê Neutral Dominant',
                            positive: 'üòä Overwhelmingly Positive'
                        }[maxCategory]}`,
                        align: 'left',
                        style: {
                            color: {
                                negative: '#dc3545',
                                neutral: '#ffa500',
                                positive: '#28a745'
                            }[maxCategory],
                            fontSize: '14px'
                        }
                    },
                    xAxis: {
                        min: 0,
                        title: { text: null },
                        gridLineWidth: 0
                    },
                    yAxis: {
                        categories: [
                            'üò† Negative',
                            'üòê Neutral',
                            'üòä Positive'
                        ],
                        labels: {
                            style: {
                                fontSize: '14px',
                                fontWeight: 'bold'
                            }
                        }
                    },
                    plotOptions: {
                        bar: {
                            borderRadius: 8,
                            colorByPoint: true,
                            dataLabels: {
                                enabled: true,
                                format: '{y}',
                                align: 'left',
                                style: {
                                    fontSize: '14px',
                                    textOutline: 'none',
                                    color: '#333'
                                }
                            }
                        }
                    },
                    colors: ['#dc3545', '#ffa500', '#28a745'], // Red, Orange, Green
                    series: [{
                        name: 'Sentiment Count',
                        data: [
                            categories.negative,
                            categories.neutral,
                            categories.positive
                        ]
                    }],
                    legend: { enabled: false },
                    credits: { enabled: false },
                    tooltip: {
                        headerFormat: '',
                        pointFormat: '<b>{point.category}</b><br/>Count: {point.y}'
                    }
                };

                setChartOptions(options);
                setError(null);
            } catch (err) {
                console.error('Error:', err);
                setError(err.message);
                setChartOptions({
                    title: { text: 'Error Loading Data' },
                    series: [{}]
                });
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, [isStyleMode]);

    return (
        <div className="sentiment-chart-container">
            {loading && <div className="loading-indicator">Loading...</div>}
            {error && <div className="error-message">{error}</div>}
            <HighchartsReact
                highcharts={Highcharts}
                options={merge({}, chartOptions, isStyleMode ? themeConfig : {}, modeConfig)}
                immutable={true}
            />
        </div>
    );
}
